# This is an example goreleaser.yaml file with some sane defaults.
# Make sure to check the documentation at http://goreleaser.com
builds:
- env:
  - CGO_ENABLED=0
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ .Tag }}-next"
changelog:
  sort: asc
  filters:
    exclude:
    - '^docs:'
    - '^test:'

snapcraft:
  # You can change the name of the package.
  # Default: `{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}`
  name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"

  # Replacements for GOOS and GOARCH in the package name.
  # Keys should be valid GOOSs or GOARCHs.
  # Values are the respective replacements.
  # Default is empty.
  replacements:
    amd64: 64-bit
    386: 32-bit
    darwin: macOS
    linux: Tux

  # The name of the snap. This is optional.
  # Default is project name.
  name: yamlfmt

  # Wether to publish the snap to the snapcraft store.
  # Remember you need to `snapcraft login` first.
  # Defaults to false.
  publish: true

  # Single-line elevator pitch for your amazing snap.
  # 79 char long at most.
  summary: Formats yaml files.

  # This the description of your snap. You have a paragraph or two to tell the
  # most important story about your snap. Keep it under 100 words though,
  # we live in tweetspace and your description wants to look good in the snap
  # store.
  description: |
    Formats yaml files

  # A guardrail to prevent you from releasing a snap to all your users before
  # it is ready.
  # `devel` will let you release only to the `edge` and `beta` channels in the
  # store. `stable` will let you release also to the `candidate` and `stable`
  # channels. More info about channels here:
  # https://snapcraft.io/docs/reference/channels
  grade: stable

  # Snaps can be setup to follow three different confinement policies:
  # `strict`, `devmode` and `classic`. A strict confinement where the snap
  # can only read and write in its own namespace is recommended. Extra
  # permissions for strict snaps can be declared as `plugs` for the app, which
  # are explained later. More info about confinement here:
  # https://snapcraft.io/docs/reference/confinement
  confinement: strict
  apps:
    # The name of the app must be the same name as the binary built or the snapcraft name.
    yamlfmt:

      # If your app requires extra permissions to work outside of its default
      # confined space, declare them here.
      # You can read the documentation about the available plugs and the
      # things they allow:
      # https://snapcraft.io/docs/reference/interfaces.
      plugs: ["home", "desktop"]

brew:
  name: yamlfmt

  # Repository to push the tap to.
  github:
    owner: devopyio
    name: homebrew-yamlfmt

  # Template for the url.
  # Default is "https://github.com/<repo_owner>/<repo_name>/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
  #url_template: "http://github.com/devopyio/yamlfmt/releases/{{ .Tag }}/{{ .ArtifactName }}"

  # Git author used to commit to the repository.
  # Defaults are shown.
  commit_author:
    name: devopyio
    email: info@devopy.io

  # Caveats for the user of your binary.
  # Default is empty.
  caveats: "cat example.yaml | yamlfmt or yamlfmt -filename example.yaml"

  # Your app's homepage.
  # Default is empty.
  homepage: "https://devopy.io/"

  # Your app's description.
  # Default is empty.
  description: "Formats yaml files."

  # Setting this will prevent goreleaser to actually try to commit the updated
  # formula - instead, the formula file will be stored on the dist folder only,
  # leaving the responsibility of publishing it to the user.
  # If set to auto, the release will not be uploaded to the homebrew tap
  # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
  # Default is false.
  #skip_upload: true

    # So you can `brew test` your formula.
  # Default is empty.
  #test: |
  #  system "#{bin}/program --version"
  #  ...

  # Custom install script for brew.
  # Default is 'bin.install "program"'.
  #install: |
  #  bin.install "program"
  #  ...
scoop:
  # Template for the url.
  # Default is "https://github.com/<repo_owner>/<repo_name>/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
  #url_template: "http://github.mycompany.com/foo/bar/releases/{{ .Tag }}/{{ .ArtifactName }}"

  # Repository to push the app manifest to.
  bucket:
    owner: devopyio
    name: scoop-yamlfmt

  # Git author used to commit to the repository.
  # Defaults are shown.
  commit_author:
    name: devopyio
    email: info@devopy.io

  # Your app's homepage.
  # Default is empty.
  homepage: "https://devopy.io/"

  # Your app's description.
  # Default is empty.
  description: "Formats yaml files"

  # Your app's license
  # Default is empty.
  license: Apache-2.0

